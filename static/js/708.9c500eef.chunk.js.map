{"version":3,"file":"static/js/708.9c500eef.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  a {\n    display: block;\n    padding: 15px;\n    text-decoration: none;\n    color: #333;\n    font-size: 16px;\n    font-weight: bold;\n    transition: color 0.3s ease-in-out;\n\n    &:hover {\n      color: #007bff;\n    }\n  }\n`;\nexport const MovieImage = styled.img`\n    width: 250px;\n\n@media screen and (min-width: 768px) {\n  width: 200px;\n  height: 300px;\n}\n`;\n\nexport const NoResults = styled.p`\n  font-size: 16px;\n  color: #555;\n  margin-top: 20px;\n  text-align: center;\n`;\n\nexport const MovieDescription = styled.p`\n  font-size: 14px;\n  color: #666;\n  margin-top: 10px;\n`;\n\nexport const DefaultImage = styled.img`\n  width: 100%;\n  height: 300px; /* Adjust the height as needed */\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const PlaceholderText = styled.span`\n  color: #777;\n`;\n\nexport const DefaultPoster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  padding: 15px;\n  text-decoration: none;\n  color: #333;\n  font-size: 16px;\n  font-weight: bold;\n  transition: color 0.3s ease-in-out;\n\n  &:hover {\n    color: #007bff;\n  }\n`;\n","import defaultPoster from '../../images/default_poster.jpeg';\nimport { MovieList, MovieItem, MovieImage } from './MoviesList.styled'; // Assuming you have a styled component for the image\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieList>\n      {movies.map((movie) => {\n        const name = movie.name ?? movie.title;\n        const imageUrl = movie.poster_path\n          ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n          : defaultPoster\n\n        return (\n          <MovieItem key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              <MovieImage src={imageUrl} alt={name} />\n              {name}\n            </Link>\n          </MovieItem>\n        );\n      })}\n    </MovieList>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Style = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const Movie = styled.div`\n  display: flex;\n  margin-top: 20px;\n`;\n\nexport const MovieImg = styled.img`\n  width: 300px;\n  height: auto;\n  object-fit: cover;\n  border-radius: 8px;\n  margin-right: 20px;\n`;\n\nexport const MovieInfo = styled.div`\n  flex: 1;\n`;\n\nexport const MovieName = styled.h1`\n  font-size: 28px;\n  font-weight: bold;\n  margin-bottom: 10px;\n`;\n\nexport const UserScore = styled.p`\n  font-size: 16px;\n  color: #555;\n  margin-bottom: 10px;\n`;\n\nexport const Overview = styled.h2`\n  font-size: 24px;\n  font-weight: bold;\n  margin-top: 20px;\n`;\n\nexport const OverviewText = styled.p`\n  font-size: 16px;\n  color: #555;\n  margin-bottom: 20px;\n`;\n\nexport const Genres = styled.h2`\n  font-size: 24px;\n  font-weight: bold;\n  margin-top: 20px;\n`;\n\nexport const GenresStyles = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const GenresText = styled.span`\n  font-size: 16px;\n  color: #007bff;\n  margin-right: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const GoBackBtn = styled.button`\n  background-color: #007bff;\n  color: #fff;\n  padding: 10px 15px;\n  font-size: 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n\n  svg {\n    margin-right: 5px;\n  }\n\n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const AdInfo = styled.h2`\n  font-size: 24px;\n  font-weight: bold;\n  margin-top: 20px;\n`;\n\nexport const InfoList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const InfoItem = styled.li`\n  margin-right: 20px;\n\n  a {\n    text-decoration: none;\n    color: #007bff;\n    font-size: 18px;\n    font-weight: bold;\n    transition: color 0.3s ease-in-out;\n\n    &:hover {\n      color: #0056b3;\n    }\n  }\n`;","import { useParams, Link, useLocation, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { Suspense } from 'react';\nimport {\n  Style,\n  MovieImg,\n  MovieName,\n  UserScore,\n  Overview,\n  OverviewText,\n  Genres,\n  GenresText,\n  GoBackBtn,\n  AdInfo,\n  InfoList,\n  Movie,\n  MovieInfo,\n  GenresStyles,\n  InfoItem,\n} from './MovieDetails.styled';\nimport { fetchMovieDetails } from '../../services/api';\n\nconst baseUrl = 'https://image.tmdb.org/t/p/w300';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (movieId) {\n          const fetchedMovie = await fetchMovieDetails(movieId);\n          const releaseYear = new Date(fetchedMovie.release_date).getFullYear();\n          const percentage = (fetchedMovie.vote_average / 10) * 100;\n          setMovie({ ...fetchedMovie, releaseYear, percentage });\n        }\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setMovie(null);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/images=1000x700';\n\n  return (\n    <main>\n      {movie && (\n        <Style>\n          <Link to={backLink} style={{ textDecoration: 'none' }}>\n            <GoBackBtn type=\"button\">\n              <AiOutlineArrowLeft />\n              Go back\n            </GoBackBtn>\n          </Link>\n          <Movie>\n            <MovieImg\n              src={\n                movie.poster_path\n                  ? `${baseUrl}${movie.poster_path}`\n                  : defaultImg\n              }\n            ></MovieImg>\n\n            <MovieInfo>\n              <MovieName>\n                {movie.title} ({movie.releaseYear})\n              </MovieName>\n              <UserScore>User Score: {movie.percentage.toFixed(1)}%</UserScore>\n              <Overview>Overview</Overview>\n              <OverviewText>{movie.overview}</OverviewText>\n              <Genres>Genres</Genres>\n              <GenresStyles>\n                {movie.genres.map(genre => (\n                  <GenresText key={genre.id}>{genre.name}</GenresText>\n                ))}\n              </GenresStyles>\n            </MovieInfo>\n          </Movie>\n          <AdInfo>Additional information</AdInfo>\n          <InfoList>\n            <InfoItem>\n              <Link to=\"cast\">Cast</Link>\n            </InfoItem>\n            <InfoItem>\n              <Link to=\"reviews\">Reviews</Link>\n            </InfoItem>\n          </InfoList>\n          <Suspense fallback={<div>Loading page...</div>}>\n            <Outlet />\n          </Suspense>\n        </Style>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  margin-bottom: 20px;\n  max-width: 400px;\n  margin: 20px auto;\n`;\n\nexport const SearchFormInput = styled.input`\n  flex: 1;\n  padding: 12px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 6px 0 0 6px;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-color: #007bff;\n    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  padding: 12px 20px;\n  font-size: 16px;\n  background-color: #007bff;\n  color: #fff;\n  border: 1px solid #007bff;\n  border-radius: 0 6px 6px 0;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;","import { SearchForm, SearchFormInput, SearchBtn } from './Search.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState } from 'react';\n\nexport const Search = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(searchParams);\n    setSearchParams({ query: inputValue });\n    if (inputValue.trim() === '') {\n      return;\n    }\n    onSubmit(inputValue);\n  };\n\n  const handleChange = e => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchFormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        value={inputValue}\n        onChange={handleChange}\n      ></SearchFormInput>\n      <SearchBtn type=\"submit\">Search</SearchBtn>\n    </SearchForm>\n  );\n};\n","import MovieDetails from 'pages/MovieDetails/MovieDetails';\nimport { Search } from 'components/Search/Search';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport { fetchSearch } from '../../services/api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const { movieId } = useParams();\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n\n\n  useEffect(() => {\n    if (!movieId) return;\n  }, [movieId]);\n\n  const handleSubmit = value => {\n  };\n\n  useEffect(() => {\n    if (query) {\n      fetchSearch(query).then(movies => {\n        if (movies.results.length > 0) {\n          setMovies(movies.results);\n        }\n      });\n    }\n  }, [query]);\n\n  return (\n    <main>\n      <Search onSubmit={handleSubmit}></Search>\n      <MoviesList movies={movies}></MoviesList>\n      <MovieDetails movieId={movieId}></MovieDetails>\n    </main>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\nconst KEY = '4c22694614865aab1f8d67ad6cba4463';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\naxios.defaults.params = {\n  api_key: KEY,\n};\nexport async function fetchTrend() {\n  try {\n    const response = await axios.get('/3/trending/movie/week');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function fetchSearch(value) {\n  try {\n    const response = await axios.get(`/3/search/movie?query=${value}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const response = await axios.get(`/3/movie/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchCast(id) {\n  try {\n    const response = await axios.get(`/3/movie/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchReview(id) {\n  try {\n    const response = await axios.get(`/3/movie/${id}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n}\n"],"names":["MovieList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","MovieImage","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","Link","_templateObject9","_ref","movies","location","useLocation","_jsx","children","map","movie","_movie$name","name","title","imageUrl","poster_path","concat","defaultPoster","_jsxs","to","id","state","from","src","alt","Style","Movie","MovieImg","MovieInfo","MovieName","UserScore","Overview","OverviewText","Genres","GenresStyles","_templateObject10","GenresText","_templateObject11","GoBackBtn","_templateObject12","AdInfo","_templateObject13","InfoList","_templateObject14","InfoItem","_templateObject15","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","backLink","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovie","releaseYear","percentage","_context","prev","next","fetchMovieDetails","sent","Date","release_date","getFullYear","vote_average","_objectSpread","t0","console","error","stop","apply","arguments","style","textDecoration","type","AiOutlineArrowLeft","toFixed","overview","genres","genre","Suspense","fallback","Outlet","SearchForm","SearchFormInput","SearchBtn","Search","onSubmit","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","inputValue","setInputValue","e","preventDefault","log","query","trim","autoComplete","autoFocus","value","onChange","currentTarget","setMovies","get","fetchSearch","then","results","length","MoviesList","MovieDetails","fetchTrend","_fetchTrend","response","axios","abrupt","data","_x","_fetchSearch","_callee2","_context2","_x2","_fetchMovieDetails","_callee3","_context3","fetchCast","_x3","_fetchCast","_callee4","_context4","fetchReview","_x4","_fetchReview","_callee5","_context5","api_key"],"sourceRoot":""}