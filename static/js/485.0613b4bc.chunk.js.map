{"version":3,"file":"static/js/485.0613b4bc.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","helpers/notification.js","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  a {\n    display: block;\n    padding: 15px;\n    text-decoration: none;\n    color: #333;\n    font-size: 16px;\n    font-weight: bold;\n    transition: color 0.3s ease-in-out;\n\n    &:hover {\n      color: #007bff;\n    }\n  }\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n  height: 300px; /* Вы можете настроить высоту по своему усмотрению */\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 300px;\n  }\n`;\n\nexport const NoResults = styled.p`\n  font-size: 16px;\n  color: #555;\n  margin-top: 20px;\n  text-align: center;\n`;\n\nexport const MovieDescription = styled.p`\n  font-size: 14px;\n  color: #666;\n  margin-top: 10px;\n`;\n\nexport const DefaultImage = styled.img`\n  width: 100%;\n  height: 300px; /* Вы можете настроить высоту по своему усмотрению */\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const PlaceholderText = styled.span`\n  color: #777;\n`;\n\nexport const DefaultPoster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  padding: 15px;\n  text-decoration: none;\n  color: #333;\n  font-size: 16px;\n  font-weight: bold;\n  transition: color 0.3s ease-in-out;\n\n  &:hover {\n    color: #007bff;\n  }\n`;\n\nexport const VoteAvr = styled.span`\n  display: block;\n  margin-top: 10px;\n  padding: 5px;\n  border-radius: 4px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: bold;\n  background-color: ${({ bgColor }) => bgColor || '#555'}; // Цвет фона в зависимости от значения props.bgColor\n`;\n\nexport const MovieTitle = styled.h3`\n  margin-top: 10px;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const MovieRelease = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 5px;\n  font-size: 14px;\n  color: #666;\n\n  svg {\n    margin-right: 5px;\n  }\n`;\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\nexport const Poster = styled.img`\n  width: 250px;\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 300px;\n  }\n`;\nexport const Item = styled.li`\n  position: relative;\n  transition: transform 350ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc((100%) - 80px) / 3;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100%) - 200px) / 6;\n  }\n`;","import defaultPoster from '../../images/default_poster.jpeg';\nimport {\n  MovieList,\n  Item,\n  Poster,\n  MovieLink,\n  MovieTitle,\n  MovieRelease,\n} from './MoviesList.styled';\n\n\nconst MoviesList = ({ movies, location }) => {\n\n  return (\n    <MovieList>\n      {movies.map(\n        ({\n          id,\n          original_title,\n          poster_path,\n          release_date,\n        }) => (\n          <Item key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              <Poster\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                    : defaultPoster\n                }\n                alt={original_title}\n              />\n              <MovieTitle>{original_title}</MovieTitle>\n              {release_date && (\n                <MovieRelease />\n              )}\n            </MovieLink>\n          </Item>\n        )\n      )}\n    </MovieList>\n  );\n};\n\nexport default MoviesList;\n","import { Notify } from 'notiflix';\n\nconst notification = message => {\n  Notify.init({\n    backOverlay: true,\n    info: {\n      background: '#1cb114',\n    },\n  });\n\n  return Notify.info(message);\n};\n\nexport default notification;\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 28px;\n  font-weight: bold;\n  color: #333;\n  margin-bottom: 20px;\n`;\n\n\n","import { Main, Title } from './Home.styled';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { fetchTrend } from '../../services/api';\nimport notification from 'helpers/notification';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchTrendings = async () => {\n      try {\n        const response = await fetchTrend();\n        setMovies(response);\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrendings();\n  }, []);\n\n  return (\n\n    <Main>\n      {loading && <Loader />}\n      <Title />\n      <MoviesList movies={movies}></MoviesList>\n    </Main>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst KEY = '59ebc442501bddfafe2b400f88f1e660';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\naxios.defaults.params = {\n  api_key: KEY,\n};\nexport const fetchTrend = async () => {\n  const { data } = await axios.get('/3/trending/movie/week');\n  return data.results;\n};\nexport const getfetchSearch = async id => {\n  const { data } = await axios.get(`/3/movie/${id}`);\n\n  return data;\n};\n\nexport const fetchMovieDetails = async (query, page) => {\n  const { data } = await axios.get(\n    `/3/search/movie?query=${query}&page=${page}`\n  );\n\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/3/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const fetchReview = async id => {\n  const { data } = await axios.get(`3/movie/${id}/reviews`);\n\n  return data;\n};\n"],"names":["MovieList","styled","_templateObject","_taggedTemplateLiteral","MovieTitle","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","Link","_templateObject9","_templateObject10","_ref","bgColor","_templateObject11","MovieRelease","_templateObject12","MovieLink","_templateObject13","Poster","_templateObject14","Item","_templateObject15","movies","location","_jsx","children","map","_ref2","id","original_title","poster_path","release_date","_jsxs","to","concat","state","from","src","defaultPoster","alt","message","Notify","backOverlay","info","background","Main","Title","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loading","setLoading","useEffect","fetchTrendings","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","fetchTrend","sent","t0","notification","finish","stop","apply","arguments","Loader","MoviesList","axios","api_key","_yield$axios$get","data","abrupt","results","getfetchSearch","_callee2","_yield$axios$get2","_context2","_x","fetchMovieDetails","_ref3","_callee3","query","page","_yield$axios$get3","_context3","_x2","_x3","fetchCast","_ref4","_callee4","_yield$axios$get4","_context4","_x4","fetchReview","_ref5","_callee5","_yield$axios$get5","_context5","_x5"],"sourceRoot":""}