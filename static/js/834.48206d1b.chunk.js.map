{"version":3,"file":"static/js/834.48206d1b.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","helpers/notification.js","components/Search/Search.styled.jsx","components/Search/Search.jsx","components/PaginationList/PaginationList.jsx","components/Scroll/Scroll.styled.jsx","components/Scroll/Scroll.jsx","helpers/smScroll.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { styled } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  a {\n    display: block;\n    padding: 15px;\n    text-decoration: none;\n    color: #333;\n    font-size: 16px;\n    font-weight: bold;\n    transition: color 0.3s ease-in-out;\n\n    &:hover {\n      color: #007bff;\n    }\n  }\n`;\n\nexport const MovieImage = styled.img`\n  width: 100%;\n  height: 300px; /* Вы можете настроить высоту по своему усмотрению */\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 300px;\n  }\n`;\n\nexport const NoResults = styled.p`\n  font-size: 16px;\n  color: #555;\n  margin-top: 20px;\n  text-align: center;\n`;\n\nexport const MovieDescription = styled.p`\n  font-size: 14px;\n  color: #666;\n  margin-top: 10px;\n`;\n\nexport const DefaultImage = styled.img`\n  width: 100%;\n  height: 300px; /* Вы можете настроить высоту по своему усмотрению */\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const PlaceholderText = styled.span`\n  color: #777;\n`;\n\nexport const DefaultPoster = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  padding: 15px;\n  text-decoration: none;\n  color: #333;\n  font-size: 16px;\n  font-weight: bold;\n  transition: color 0.3s ease-in-out;\n\n  &:hover {\n    color: #007bff;\n  }\n`;\n\nexport const VoteAvr = styled.span`\n  display: block;\n  margin-top: 10px;\n  padding: 5px;\n  border-radius: 4px;\n  color: #fff;\n  font-size: 14px;\n  font-weight: bold;\n  background-color: ${({ bgColor }) => bgColor || '#555'}; // Цвет фона в зависимости от значения props.bgColor\n`;\n\nexport const MovieTitle = styled.h3`\n  margin-top: 10px;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const MovieRelease = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 5px;\n  font-size: 14px;\n  color: #666;\n\n  svg {\n    margin-right: 5px;\n  }\n`;\nexport const MovieLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n`;\nexport const Poster = styled.img`\n  width: 250px;\n\n  @media screen and (min-width: 768px) {\n    width: 200px;\n    height: 300px;\n  }\n`;\nexport const Item = styled.li`\n  position: relative;\n  transition: transform 350ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc((100%) - 80px) / 3;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc((100%) - 200px) / 6;\n  }\n`;","import defaultPoster from '../../images/default_poster.jpeg';\nimport {\n  MovieList,\n  Item,\n  Poster,\n  MovieLink,\n  MovieTitle,\n  MovieRelease,\n} from './MoviesList.styled';\n\n\nconst MoviesList = ({ movies, location }) => {\n\n  return (\n    <MovieList>\n      {movies.map(\n        ({\n          id,\n          original_title,\n          poster_path,\n          release_date,\n        }) => (\n          <Item key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              <Poster\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                    : defaultPoster\n                }\n                alt={original_title}\n              />\n              <MovieTitle>{original_title}</MovieTitle>\n              {release_date && (\n                <MovieRelease />\n              )}\n            </MovieLink>\n          </Item>\n        )\n      )}\n    </MovieList>\n  );\n};\n\nexport default MoviesList;\n","import { Notify } from 'notiflix';\n\nconst notification = message => {\n  Notify.init({\n    backOverlay: true,\n    info: {\n      background: '#1cb114',\n    },\n  });\n\n  return Notify.info(message);\n};\n\nexport default notification;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  margin-bottom: 20px;\n  max-width: 400px;\n  margin: 20px auto;\n`;\n\nexport const SearchFormInput = styled.input`\n  flex: 1;\n  padding: 12px;\n  font-size: 16px;\n  border: 1px solid #ccc;\n  border-radius: 6px 0 0 6px;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-color: #007bff;\n    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  padding: 12px 20px;\n  font-size: 16px;\n  background-color: #007bff;\n  color: #fff;\n  border: 1px solid #007bff;\n  border-radius: 0 6px 6px 0;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;","import { SearchForm, SearchFormInput, SearchBtn } from './Search.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState } from 'react';\n\nexport const Search = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(searchParams);\n    setSearchParams({ query: inputValue });\n    if (inputValue.trim() === '') {\n      return;\n    }\n    onSubmit(inputValue);\n  };\n\n  const handleChange = e => {\n    setInputValue(e.currentTarget.value);\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchFormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        value={inputValue}\n        onChange={handleChange}\n      ></SearchFormInput>\n      <SearchBtn type=\"submit\">Search</SearchBtn>\n    </SearchForm>\n  );\n};\nexport default Search","import { Pagination } from '@mui/material';\n\nconst PaginationList = ({ pageQty, pg, onChange }) => {\n    const handlePaginationChange = (_, num) => {\n        onChange(num);\n    };\n\n    return (\n\n        <Pagination\n            count={pageQty}\n            page={pg}\n            onChange={handlePaginationChange}\n            color={'success'}\n            sx={{\n                color: '#fff',\n                stroke: '#fff',\n                display: 'flex',\n                justifyContent: 'center',\n                marginTop: '30px',\n\n                '& .MuiPaginationItem-root': {\n                    color: '#fff',\n                },\n                '& .MuiPaginationItem-page': {\n                    '&:hover:not(.Mui-selected):not(:first-of-type), &:focus:not(.Mui-selected):not(:first-of-type)':\n                    {\n                        color: '#1cb114',\n                    },\n                },\n            }}\n        />\n    );\n};\n\nexport default PaginationList;","import { styled } from 'styled-components';\n\nexport const ScrollUpButton = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 37px;\n  background-color: #0dcb2d70;\n  border: 3px solid #fff;\n  border-radius: 50%;\n  width: 90px;\n  height: 90px;\n  cursor: pointer;\n  transition: transform 300ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 100px;\n    height: 100px;\n  }\n`;","import { FaArrowUpLong } from 'react-icons/fa6';\nimport { ScrollUpButton } from './Scroll.styled';\nimport { useEffect, useState } from 'react';\n\nconst ScrollUpBtn = () => {\n    const [isVisible, setIsVisible] = useState(false);\n\n    useEffect(() => {\n        const handleScroll = () => {\n            const scrollPosition = window.scrollY;\n\n            if (scrollPosition > 200) {\n                setIsVisible(true);\n            } else {\n                setIsVisible(false);\n            }\n        };\n\n        window.addEventListener('scroll', handleScroll);\n\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []);\n\n    const scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n        });\n    };\n\n    return (\n        <ScrollUpButton\n            onClick={scrollToTop}\n            style={{ display: isVisible ? 'block' : 'none' }}\n        >\n            <FaArrowUpLong size={35} fill=\"#fff\" />\n        </ScrollUpButton>\n    );\n};\n\nexport default ScrollUpBtn;","import { scroller } from 'react-scroll';\n\nconst smoothScroll = target => {\n  scroller.scrollTo(target, {\n    duration: 1000,\n    delay: 0,\n    smooth: true,\n    offset: -50,\n  });\n};\n\nexport default smoothScroll;","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Search from 'components/Search/Search';\nimport { fetchMovieDetails } from '../../services/api';\nimport notification from 'helpers/notification';\nimport PaginationList from 'components/PaginationList/PaginationList';\nimport Scroll from 'components/Scroll/Scroll';\nimport smScroll from 'helpers/smScroll';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [pg, setPg] = useState(1);\n  const [pageQty, setPageQty] = useState(0);\n\n  const handleSearch = value => {\n    setPg(1);\n    setSearchParams({ query: value, page: pg });\n  };\n\n  useEffect(() => {\n    const queryForSearch = searchParams.get('query') || '';\n    if (!queryForSearch) return;\n    setLoading(true);\n\n    const fetchMoviesBySearch = async () => {\n      try {\n        const { page, results, total_pages } = await fetchMovieDetails(\n          queryForSearch,\n          pg\n        );\n\n        setMovies(results);\n        setPg(page);\n        setPageQty(total_pages);\n        setSearchParams({ query: queryForSearch, page: pg });\n\n        if (!results.length) {\n          setSearchParams({});\n          return notification(\n            `Sorry, no movies found on query ${queryForSearch}`\n          );\n        }\n\n        return results;\n      } catch ({ message }) {\n        notification(message);\n      } finally {\n        setLoading(false);\n\n        smScroll('movieList');\n      }\n    };\n    fetchMoviesBySearch();\n  }, [searchParams, pg, setSearchParams]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <Search search={handleSearch} />\n\n      {pageQty > 1 && (\n        <PaginationList pageQty={pageQty} pg={pg} onChange={setPg} />\n      )}\n\n      {movies.length > 0 && <MoviesList movies={movies} location={location} />}\n\n      <Scroll />\n    </>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst KEY = '59ebc442501bddfafe2b400f88f1e660';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\naxios.defaults.params = {\n  api_key: KEY,\n};\nexport const fetchTrend = async () => {\n  const { data } = await axios.get('/3/trending/movie/week');\n  return data.results;\n};\nexport const getfetchSearch = async id => {\n  const { data } = await axios.get(`/3/movie/${id}`);\n\n  return data;\n};\n\nexport const fetchMovieDetails = async (query, page) => {\n  const { data } = await axios.get(\n    `/3/search/movie?query=${query}&page=${page}`\n  );\n\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/3/movie/${id}/credits`);\n\n  return data;\n};\n\nexport const fetchReview = async id => {\n  const { data } = await axios.get(`3/movie/${id}/reviews`);\n\n  return data;\n};\n"],"names":["MovieList","styled","_templateObject","_taggedTemplateLiteral","MovieTitle","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","Link","_templateObject9","_templateObject10","_ref","bgColor","_templateObject11","MovieRelease","_templateObject12","MovieLink","_templateObject13","Poster","_templateObject14","Item","_templateObject15","movies","location","_jsx","children","map","_ref2","id","original_title","poster_path","release_date","_jsxs","to","concat","state","from","src","defaultPoster","alt","message","Notify","backOverlay","info","background","SearchForm","SearchFormInput","SearchBtn","onSubmit","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","inputValue","setInputValue","e","preventDefault","console","log","query","trim","type","autoComplete","autoFocus","value","onChange","currentTarget","pageQty","pg","Pagination","count","page","_","num","color","sx","stroke","display","justifyContent","marginTop","ScrollUpButton","isVisible","setIsVisible","useEffect","handleScroll","scrollPosition","window","scrollY","addEventListener","removeEventListener","onClick","scrollTo","top","behavior","style","FaArrowUpLong","size","fill","target","scroller","duration","delay","smooth","offset","useLocation","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setPg","_useState7","_useState8","setPageQty","queryForSearch","get","fetchMoviesBySearch","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovieDeta","results","total_pages","_context","prev","next","fetchMovieDetails","sent","length","abrupt","notification","t0","smScroll","finish","stop","apply","arguments","_Fragment","Loader","Search","search","PaginationList","MoviesList","Scroll","axios","api_key","fetchTrend","_yield$axios$get","data","getfetchSearch","_callee2","_yield$axios$get2","_context2","_x","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_x3","fetchCast","_ref4","_callee4","_yield$axios$get4","_context4","_x4","fetchReview","_ref5","_callee5","_yield$axios$get5","_context5","_x5"],"sourceRoot":""}